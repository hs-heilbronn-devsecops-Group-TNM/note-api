name: Container-Build-Push-Deploy

on:
  workflow_run:
    workflows: ["Codecov-and-Snyk"]
    branches: [main]
    types:
      - completed
  workflow_dispatch:

permissions:
  packages: write

jobs:
  envs:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.set-tag.outputs.tag }}
      grc_project_id: ${{ steps.set-project-id.outputs.grc_project_id }}
      grc_artifactory_repo: ${{ steps.set-project-id.outputs.grc_artifactory_repo }}
    permissions:
      contents: read  # Required to read repository metadata
    steps:
    - name: Set commit hash short env
      shell: bash
      run: |
        echo "COMMIT_HASH_SHORT=$(echo ${{ github.sha }} | cut -c1-7)" >> $GITHUB_ENV

    - name: Get current date
      id: date
      shell: bash
      run: echo "::set-output name=date::$(date +'%Y-%m-%d')"
      
    - name: Set Docker Container Tag
      id: set-tag
      shell: bash
      run: |
        if [ "${{ github.event_name }}" == "pull_request" ]; then
          echo "tag=pre-merge-${{ steps.date.outputs.date }}-sha-${{ env.COMMIT_HASH_SHORT }}" >> $GITHUB_ENV
          echo "::set-output name=tag::pre-merge-${{ steps.date.outputs.date }}-sha-${{ env.COMMIT_HASH_SHORT }}"
        else
          echo "tag=main-release-${{ steps.date.outputs.date }}-sha-${{ env.COMMIT_HASH_SHORT }}" >> $GITHUB_ENV
          echo "::set-output name=tag::main-release-${{ steps.date.outputs.date }}-sha-${{ env.COMMIT_HASH_SHORT }}"
        fi

  build-and-push-container:
    runs-on: ubuntu-latest
    needs: envs  

    if: ${{ github.event_name == 'workflow_dispatch' || github.event.workflow_run.conclusion == 'success' }}

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Log in to GitHub Container Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      shell: bash
      run: echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

    - name: Build Docker image
      shell: bash
      run: docker build -t ghcr.io/hs-heilbronn-devsecops-group-tnm/note-api:${{ needs.envs.outputs.tag }} .

    - name: Push Docker image
      shell: bash
      run: docker push ghcr.io/hs-heilbronn-devsecops-group-tnm/note-api:${{ needs.envs.outputs.tag }}

  deploy-to-google-cloud-run:
    runs-on: ubuntu-latest
    needs: [build-and-push-container, envs]

    permissions:
      contents: 'read'
      id-token: 'write'
      packages: 'read'

    steps:
    - uses: 'actions/checkout@v4'

    - uses: 'google-github-actions/auth@v2'
      id: 'google-auth'
      with:
        workload_identity_provider: 'projects/70756149774/locations/global/workloadIdentityPools/github-actions/providers/github-repos'
        service_account: 'hshn-devsecops-service-account@hs-heilbronn-devsecops.iam.gserviceaccount.com'

    - name: Install Skopeo
      run: |
        sudo apt-get update
        sudo apt-get install -y skopeo

    - name: Copy Image to Google Artifact Registry
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        # Log in to GitHub Container Registry
        echo "${{ secrets.GITHUB_TOKEN }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin

        # Sync the image
        gcloud auth configure-docker europe-west3-docker.pkg.dev
        skopeo sync \
          --src docker \
          --dest docker \
          --dest-registry-token "${{ steps.google-auth.outputs.access_token }}" \
          ghcr.io/hs-heilbronn-devsecops-group-tnm/note-api:${{ needs.envs.outputs.tag }} \
          europe-west3-docker.pkg.dev/hs-heilbronn-devsecops/note-api-hs-heilbronn-devsecops-group-tnm/

    - id: 'deploy'
      uses: 'google-github-actions/deploy-cloudrun@v2'
      with:
        service: 'note-api-hs-heilbronn-devsecops-group-tnm'
        image: 'europe-west3-docker.pkg.dev/hs-heilbronn-devsecops/note-api-hs-heilbronn-devsecops-group-tnm/note-api:${{ needs.envs.outputs.tag }}'
        region: 'europe-west3'
        env_vars: |-
          BACKEND=memory

    - name: 'Use output'
      shell: bash
      run: 'curl "${{ steps.deploy.outputs.url }}"'
